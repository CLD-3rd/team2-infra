apiVersion: v1
kind: Service
metadata:
  name: savemypodo-app-service
spec:
  selector:
    app.kubernetes.io/name: savemypodo-app
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-app-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:061039804626:certificate/c5d88964-477f-47a8-b19e-f803134954b6 # ACM 인증서 ARN을 여기에 입력!!
    external-dns.alpha.kubernetes.io/hostname: api.savemypodo.shop
    alb.ingress.kubernetes.io/backend-protocol: HTTP
spec:
  ingressClassName: alb
  rules:
    - host: api.savemypodo.shop
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: savemypodo-app-service
                port:
                  number: 8080
  tls:
    - hosts:
        - api.savemypodo.shop
      secretName: dummy-placeholder  # ALB는 ACM 사용하므로 실제로는 사용되지 않음

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: savemypodo-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: savemypodo-app-deployment
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: savemypodo-app-deployment
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: savemypodo-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: savemypodo-app
    spec:
      containers:
      - name: savemypodo-app-container
        image: cjsqudwns/savemypodo-be:6a74531
        ports:
        - protocol: TCP
          containerPort: 8080
        
    resources:
      requests:
        cpu: "300m"
        memory: "512Mi"
      limits:
        cpu: "1"
        memory: "1Gi"

        # promethues 설정 완료되면 주석해제
        # livenessProbe:
        #   httpGet:
        #     path: /actuator/health/liveness
        #     port: 8080
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
        
        # readinessProbe:
        #   httpGet:
        #     path: /actuator/health/readiness
        #     port: 8080
        #   initialDelaySeconds: 10
        #   periodSeconds: 5
        #   timeoutSeconds: 3
        #   successThreshold: 1

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: savemypodo-app
  namespace: monitoring 
  labels:
    app: savemypodo-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: savemypodo-app
  namespaceSelector:
    matchNames:
      - default
  endpoints:
  - port: 8080
    path: /actuator/prometheus
    interval: 15s
    scrapeTimeout: 10s